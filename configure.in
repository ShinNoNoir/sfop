AC_INIT(src/CSfop.cpp)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(sfop,1.0)
AC_PROG_CXX
AC_LANG([C++])
AM_PROG_LIBTOOL
AC_PROG_INSTALL

# check for doxygen, mostly taken from
# http://stuff.mit.edu/afs/sipb/project/libofx/src/libofx-0.6.2/configure.in
# see also package log4cpp-0.2.8
AC_DEFUN([BB_ENABLE_DOXYGEN],
[
AC_ARG_ENABLE(doxygen,          [  --enable-doxygen            enable documentation generation with doxygen (auto)])
AC_ARG_ENABLE(dot,              [  --enable-dot                use 'dot' to generate graphs in doxygen (auto)])
AC_ARG_ENABLE(html-docs,        [  --enable-html-docs          enable HTML generation with doxygen (yes)], [], [ enable_html_docs=yes])
AC_ARG_ENABLE(latex-docs,       [  --enable-latex-docs         enable LaTeX documentation generation with doxygen (no)], [], [ enable_latex_docs=no])
if test "x$enable_doxygen" = xno
then
    enable_doc=no
else
    AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
    if test x$DOXYGEN = x
    then
        if test "x$enable_doxygen" = xyes
        then
            AC_MSG_ERROR([could not find doxygen])
        fi
        enable_doc=no
    else
        enable_doc=yes
        AC_PATH_PROG(DOT, dot, , $PATH)
    fi
fi
AM_CONDITIONAL(DOC, test x$enable_doc = xyes)

if test x$DOT = x
then
    if test "x$enable_dot" = xyes
    then
        AC_MSG_ERROR([could not find dot])
    fi
    enable_dot=no
else
    enable_dot=yes
fi
AM_CONDITIONAL(ENABLE_DOXYGEN, test x$enable_doc = xtrue)
AC_SUBST(enable_dot)
AC_SUBST(enable_html_docs)
AC_SUBST(enable_latex_docs)
])
BB_ENABLE_DOXYGEN

# Depending on the system, check for libraries for cimg
if test `uname -s | sed -e 's/^\(.....\).*$/\1/'` = MINGW
then
    AC_CHECK_LIB([gdi32],[main],,[AC_MSG_ERROR([gdi32 library not found, needed for cimg applications])])
    AC_PATH_PROG(GM,[gm.exe],[AC_MSG_WARN([ImageMagick not found, cimg and thus the applications would not be able to read any compressed file formats])])
else
    AC_CHECK_LIB([X11],[main],,[AC_MSG_ERROR([X11 library not found, needed for cimg applications])])
    AC_CHECK_LIB([pthread],[main],,[AC_MSG_ERROR([pthread library not found, needed for cimg applications])])
    AC_PATH_PROG(CONVERT,[convert],[AC_MSG_ERROR([ImageMagick not installed, cimg gui won be able to display file formats other than pgm])])
fi

# GPU Version enables via flag for configure
AC_ARG_ENABLE(gpu,              [  --enable-gpu                enable GPU version (yes)], [enable_gpu=no], [enable_gpu=yes])
AM_CONDITIONAL([GPUVERSION], [test x$enable_gpu = xyes])
if test "$enable_gpu" = "yes"
then
    AC_CHECK_LIB([OpenCL],[main],,[AC_MSG_ERROR([OpenCL library not found, needed for GPU version (set LD_FLAGS !)])])
    AC_CHECK_HEADER([CL/cl.h],, [AC_MSG_ERROR([CL/cl.h not found, set include path in CPPFLAGS !])])
fi

# Activate test program via flag for configure
AC_ARG_ENABLE(testprogram,      [  --enable-testprogram        also generate test program (no)], [enable_testprogram=yes], [ enable_testprogram=no])
AM_CONDITIONAL([TESTPROGRAM], [test x$enable_testprogram = xyes])

# Checking for cppunit library
if test x$enable_testprogram = xyes
then
    AC_CHECK_LIB([cppunit],[main],,[AC_MSG_ERROR([cppunit library not found, needed for test programs !])])
    AC_CHECK_HEADERS([cppunit/TestFixture.h],, [AC_MSG_ERROR([cppunit/TestFixture.h not found, please set includepath via CPPFLAGS !])])
fi

# Highly optimized compilation (-O3) by default
AC_ARG_ENABLE(highoptimization, [  --enable-highoptimization   enable high optimzation with -O3 (yes)], [], [ highoptimization=yes])
if test "x$highoptimization" = xyes
then
    CXXFLAGS="-O3"
fi

AC_OUTPUT( \
    Makefile \
    src/Makefile \
    doc/Makefile \
    doc/Doxyfile \
    matlab/Makefile \
    examples/Makefile
)
