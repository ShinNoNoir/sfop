#include "CSfopTest.h"

namespace SFOP {

CPPUNIT_TEST_SUITE_REGISTRATION (CSfopTest);

void CSfopTest::chi2invTest()
{
    const double l_expect[50] = {
              0.1646316461,
              0.3597363666,
              0.6401491866,
              0.9966124482,
              1.4174442757,
              1.8919550759,
              2.4115600049,
              2.9699901329,
              3.5633080846,
              4.1900415190,
              4.8515984864,
              5.5530990382,
              6.3047798601,
              7.1241688111,
              8.0392611005,
              9.0929459496,
             10.3489603544,
             11.8998090876,
             13.8776083898,
             16.4698293371,
             19.9432840351,
             24.6811782891,
             31.2399149767,
             40.4353865312,
             53.4735853376,
             72.1483070594,
             99.1407952684,
            138.4745056612,
            196.2060791332,
            281.4761716638,
            408.1087117176,
            597.0462120574,
            880.0599133298,
           1305.4041942891,
           1946.4366883212,
           2914.7627600198,
           4380.2828947106,
           6601.7729214679,
           9973.5369256448,
          15096.5878508489,
          22887.2602513700,
          34742.9510634555,
          52795.0503822720,
          80294.9467569246,
         122203.1426808021,
         186088.3799564429,
         283499.9435404924,
         432062.2011970251,
         658671.5369297347,
        1004375.9487461806};
    for (unsigned int i = 0; i < 50; ++i) {
        const double l_n = pow(10.0, -3.0 + i * 9.0 / 49.0);
        const double l_result = CSfop::chi2inv(0.999, l_n);
        CPPUNIT_ASSERT_DOUBLES_EQUAL(l_expect[i], l_result, 1e-5);
    }
}

void CSfopTest::gammalnTest()
{
    const double l_expect[26] = {
         0.572364942924700,
         0.000000000000000,
        -0.120782237635245,
         0.000000000000000,
         0.284682870472919,
         0.693147180559945,
         1.200973602347074,
         1.791759469228055,
         2.453736570842442,
         3.178053830347945,
         3.957813967618716,
         4.787491742782045,
         5.662562059857141,
         6.579251212010101,
         7.534364236758734,
         8.525161361065413,
         9.549267257300999,
        10.604602902745247,
        11.689333420797267,
        12.801827480081469,
        13.940625219403763,
        15.104412573075516,
        16.292000476567239,
        17.502307845873887,
        18.734347511936448,
        19.987214495661888};
    for (unsigned int i = 0; i < 26; ++i) {
        const double l_x = (double) i / 2.0 + 0.5;
        const double l_result = CSfop::gammaln(l_x);
        CPPUNIT_ASSERT_DOUBLES_EQUAL(l_expect[i], l_result, 1e-5);
    }
}

void CSfopTest::gammaincTest()
{
    const double l_expect[20] = {
        0.827551759585850,
        0.879419626790057,
        0.908357989730034,
        0.927573833553705,
        0.941402445890133,
        0.951832144669907,
        0.959944796430632,
        0.966394653856728,
        0.971606904600971,
        0.975872656273671,
        0.979399221790658,
        0.982338840734720,
        0.984806083916308,
        0.986888912463439,
        0.988655983362194,
        0.990161634314574,
        0.991449379513896,
        0.992554419222070,
        0.993505478144844,
        0.994326176020188};
    for (unsigned int i = 0; i < 20; ++i) {
        const double l_x = (double) i / 10.0 + 0.1;
        const double l_result = CSfop::gammainc(l_x, 0.1);
        CPPUNIT_ASSERT_DOUBLES_EQUAL(l_expect[i], l_result, 1e-5);
    }
}

void CSfopTest::erfcoreTest()
{
    const double l_expect[10] = {
        0.405573909567538,
        0.331184580391884,
        0.272102285974191,
        0.224821249559464,
        0.186717535321017,
        0.155808917965420,
        0.130584638172895,
        0.109883530552372,
        0.092805959069627,
        0.078649603525143};
    for (unsigned int i = 0; i < 10; ++i) {
        const double l_x = (double) i / 10.0 + 0.1;
        const double l_result = CSfop::erfcore(l_x);
        CPPUNIT_ASSERT_DOUBLES_EQUAL(l_expect[i], l_result, 1e-5);
    }
}

}

